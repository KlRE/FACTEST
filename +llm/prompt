Today, we will solve a 2D motion planning problem. The goal is to navigate from a start position to a goal position, avoiding rectangular obstacles.
Problem Definition

    Start Position: Defined by boundaries.
    Obstacles: Rectangles specified by their boundaries.
    Goal Position: Defined by boundaries.

Maze Environment

Obstacles:
obstacles = [
    {"xmin": 1.0, "xmax": 3.0, "ymin": 0.9, "ymax": 1.0},   # Obstacle 1
    {"xmin": 1.0, "xmax": 5.0, "ymin": 3.9, "ymax": 4.0},   # Obstacle 2
    {"xmin": 0.9, "xmax": 1.0, "ymin": 2.0, "ymax": 3.0},   # Obstacle 3
    {"xmin": 1.0, "xmax": 2.0, "ymin": 2.9, "ymax": 3.0},   # Obstacle 4
    {"xmin": 1.9, "xmax": 2.0, "ymin": 2.0, "ymax": 3.0},   # Obstacle 5
    {"xmin": 2.0, "xmax": 4.0, "ymin": 1.9, "ymax": 2.0},   # Obstacle 6
    {"xmin": 3.9, "xmax": 4.0, "ymin": 1.0, "ymax": 3.0},   # Obstacle 7
    {"xmin": 2.9, "xmax": 3.0, "ymin": 3.0, "ymax": 4.0},   # Obstacle 8
    {"xmin": 4.0, "xmax": 6.0, "ymin": 0.9, "ymax": 1.0},   # Obstacle 9
    {"xmin": 4.9, "xmax": 5.0, "ymin": 2.0, "ymax": 4.0},   # Obstacle 10
    {"xmin": 5.0, "xmax": 6.0, "ymin": 1.9, "ymax": 2.0},   # Obstacle 11
    {"xmin": 5.9, "xmax": 6.0, "ymin": 2.0, "ymax": 5.0},   # Obstacle 12
    {"xmin": 0.0, "xmax": 7.0, "ymin": 0.0, "ymax": 0.1},   # Obstacle 13
    {"xmin": 0.0, "xmax": 0.1, "ymin": 0.0, "ymax": 3.0},   # Obstacle 14
    {"xmin": 0.0, "xmax": 0.1, "ymin": 4.0, "ymax": 5.0},   # Obstacle 15
    {"xmin": 0.0, "xmax": 6.0, "ymin": 4.9, "ymax": 5.0},   # Obstacle 16
    {"xmin": 6.9, "xmax": 7.0, "ymin": 0.0, "ymax": 5.0},   # Obstacle 17
    {"xmin": 0.1, "xmax": 0.0, "ymin": 0.0, "ymax": 5.0},   # Obstacle 18
    {"xmin": 7.0, "xmax": 7.1, "ymin": 0.0, "ymax": 5.0},   # Obstacle 19
    {"xmin": 0.0, "xmax": 7.0, "ymin": 0.1, "ymax": 0.0},   # Obstacle 20
    {"xmin": 0.0, "xmax": 7.0, "ymin": 5.0, "ymax": 5.1}    # Obstacle 21
]

Start Position:
start = {"xmin": 0.3, "xmax": 0.7, "ymin": 3.3, "ymax": 3.7}

Goal Position:
goal = {"xmin": 6.25, "xmax": 6.75, "ymin": 4.5, "ymax": 5.0}

Instructions

    Plot the Course: Visualize the start position, obstacles, and goal position by plotting these rectangles.
    Path Planning: Find a feasible path from the start to the goal while avoiding obstacles without using any algorithm like A*.
                   Only return an array of points that represent the path.

Task Objective

    Primary Goal: Navigate from the start to the goal without intersecting any obstacles.
    Constraints: All positions and obstacles are defined by rectangular boundaries and no code should be involved.

First, let's plot the course by visualizing the start position, obstacles, and goal position, ensuring that the rectangles are plotted correctly.